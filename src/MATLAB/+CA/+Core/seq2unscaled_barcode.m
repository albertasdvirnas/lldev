function [unscaledBarcode_pxRes] = seq2unscaled_barcode(ntSeq, barcodeGenSettings)
    if nargin < 2
        import CBT.get_default_barcode_gen_settings;
        defaultBarcodeGenSettings = get_default_barcode_gen_settings();
        barcodeGenSettings = defaultBarcodeGenSettings;
    end
    
    if not(isfield(barcodeGenSettings, 'isLinearTF'))
        barcodeGenSettings.isLinearTF = false;
    end
    if not(isfield(barcodeGenSettings, 'widthSigmasFromMean'))
        barcodeGenSettings.widthSigmasFromMean = 4;
    end

    import CBT.Core.cb_netropsin_vs_yoyo1_plasmid;
    barcode_bpRes_prePSF = cb_netropsin_vs_yoyo1_plasmid(...
        ntSeq, ...
        barcodeGenSettings.concNetropsin_molar, ...
        barcodeGenSettings.concYOYO1_molar, ...
        [], ...
        true ...
    );
    %TODO: switch to standard method?
    % (convolve PSF in bpRes, then convert directly to pxRes)

    import CBT.Core.apply_stretching;
    barcode_nmRes_prePSF = apply_stretching(...
        barcode_bpRes_prePSF, ...
        barcodeGenSettings.meanBpExt_nm ...
    );
    import Microscopy.Simulate.Core.apply_point_spread_function;
    barcode_nmRes_postPSF = apply_point_spread_function(...
        barcode_nmRes_prePSF, ...
        barcodeGenSettings.psfSigmaWidth_nm, ...
        barcodeGenSettings.isLinearTF, ...
        barcodeGenSettings.widthSigmasFromMean ...
    );
    unscaledBarcode_pxRes = apply_stretching(...
        barcode_nmRes_postPSF, ...
        1 / barcodeGenSettings.pixelWidth_nm ...
    ); %pxRes
end