function [] = disp_intensity_drop_warnings(dbmODW, rawKymoFileIdxs, rawKymoFileMoleculeIdxs, rawKymos, moleculeMasks, kymoStatsStructs)
    largeDropNumKymoEndAreaFrames = 10;
    largeDropRatioThreshold = 0.65;

    bgIntensityApproxs = arrayfun(...
        @(kymoStatsStruct) ...
            kymoStatsStruct.meanNonMainMoleculePixelIntensity, ...
        kymoStatsStructs, ...
        'UniformOutput', false);
    import OldDBM.Kymo.Core.calc_end_over_start_intensity_ratio
    endOverStartIntensityRatio = cellfun( ...
        @(rawKymo, moleculeMask, bgIntensityApprox) ...
            calc_end_over_start_intensity_ratio(rawKymo, moleculeMask, bgIntensityApprox, largeDropNumKymoEndAreaFrames), ...
        rawKymos, moleculeMasks, bgIntensityApproxs ...
    );
    isLargeDrop = endOverStartIntensityRatio < largeDropRatioThreshold;
    if any(isLargeDrop)
        warningFileIdxs = rawKymoFileIdxs(isLargeDrop);
        warningFileMoleculeIdxs = rawKymoFileMoleculeIdxs(isLargeDrop);
        warningSrcFilenames = dbmODW.get_molecule_src_filenames(warningFileIdxs);
        warningEndOverStartIntensityRatios = endOverStartIntensityRatio(isLargeDrop);
        warningTable = table( ...
            warningSrcFilenames, ...
            warningFileIdxs, ...
            warningFileMoleculeIdxs, ...
            warningEndOverStartIntensityRatios, ...
            'VariableNames', {'srcFilename', 'fileIdx', 'fileMoleculeIdx', 'endOverStartIntensityRatio'});
        warning('Large decreases in intensity detected!'); %TODO:
        disp(warningTable);
    end
end